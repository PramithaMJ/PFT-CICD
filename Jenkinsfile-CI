pipeline {
    agent any
    
    environment {
        DOCKER_USERNAME = "pramithamj"
    }

    stages {
        stage("1. Cleanup") {
            steps {
                deleteDir()             
            }
        }

        stage('2. Git Checkout') {
            steps {
                script {
                    git branch: 'main', url: 'https://github.com/PramithaMJ/PFT-CICD.git' 
                }
            }
        }   
        
        stage('Node Build Backend') {
            steps {
                dir("Backend") {
                    sh '''
                        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
                        export NVM_DIR="$HOME/.nvm"
                        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  
                        nvm install 14
                        nvm use 14
                        npm install
                    '''
                }
            }
        }

        stage('Node Build Frontend') {
            steps {
                dir("frontend") {
                    sh '''
                        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
                        export NVM_DIR="$HOME/.nvm"
                        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  
                        nvm install 14
                        nvm use 14
                        npm install
                    '''
                }
            }
        }
        
        stage("Integration Test") {
            steps {
                dir("Backend") {
                    echo 'Integration Test for DevopsProject1'         
                }
            }
        }

        stage('Docker Image Build') {
            steps {
                dir('Backend') {
                    script {
                        def JOB = env.JOB_NAME.toLowerCase()
                        sh "docker build -t ${DOCKER_USERNAME}/pft-ci-backend:${BUILD_NUMBER} ."
                    }
                }
                dir('frontend') {
                    script {
                        def JOB = env.JOB_NAME.toLowerCase()
                        sh "docker build -t ${DOCKER_USERNAME}/pft-ci-frontend:${BUILD_NUMBER} ."
                    }
                }
            }
        }

        stage('Docker Image Tag') {
            steps {
                dir('Backend') {
                    script {
                        def JOB = env.JOB_NAME.toLowerCase()
                        sh "docker tag ${DOCKER_USERNAME}/pft-ci-backend:${BUILD_NUMBER} ${DOCKER_USERNAME}/pft-ci-backend:v${BUILD_NUMBER}"
                        sh "docker tag ${DOCKER_USERNAME}/pft-ci-backend:${BUILD_NUMBER} ${DOCKER_USERNAME}/pft-ci-backend:latest"
                    }
                }
                dir('frontend') {
                    script {
                        def JOB = env.JOB_NAME.toLowerCase()
                        sh "docker tag ${DOCKER_USERNAME}/pft-ci-frontend:${BUILD_NUMBER} ${DOCKER_USERNAME}/pft-ci-frontend:v${BUILD_NUMBER}"
                        sh "docker tag ${DOCKER_USERNAME}/pft-ci-frontend:${BUILD_NUMBER} ${DOCKER_USERNAME}/pft-ci-frontend:latest"
                    }
                }
            } 
        }

        stage('Trivy Image Scan') {
            steps {
                script { 
                    def JOB = env.JOB_NAME.toLowerCase()
                    sh "trivy image ${DOCKER_USERNAME}/pft-ci-backend:v${BUILD_NUMBER} > backend_scan.txt"
                    sh "trivy image ${DOCKER_USERNAME}/pft-ci-frontend:v${BUILD_NUMBER} > frontend_scan.txt"
                }
            }
        }

        stage('Docker Image Push') {
            steps {
                script { 
                    withCredentials([usernamePassword(credentialsId: 'hub_creds', usernameVariable: 'docker_user', passwordVariable: 'docker_pass')]) {
                        sh "docker login -u '${docker_user}' -p '${docker_pass}'"
                        sh "docker push ${DOCKER_USERNAME}/pft-ci-backend:v${BUILD_NUMBER}"
                        sh "docker push ${DOCKER_USERNAME}/pft-ci-backend:latest"
                        sh "docker push ${DOCKER_USERNAME}/pft-ci-frontend:v${BUILD_NUMBER}"
                        sh "docker push ${DOCKER_USERNAME}/pft-ci-frontend:latest"
                    }
                }
            }
        }
        stage('Cleanup Local Images') {
            steps {
                sh "docker rmi ${DOCKER_USERNAME}/pft-ci-backend:v${BUILD_NUMBER}"
                sh "docker rmi ${DOCKER_USERNAME}/pft-ci-backend:latest"
                sh "docker rmi ${DOCKER_USERNAME}/pft-ci-frontend:v${BUILD_NUMBER}"
                sh "docker rmi ${DOCKER_USERNAME}/pft-ci-frontend:latest"
            }
        }
    }
}